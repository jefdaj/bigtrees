Create and manipulate hash trees representing collections of files.

Usage:
  bigtrees [-v] info <path>
  bigtrees [-v] find [-m <metafmt>] [-r <regex>] <path>
  bigtrees [-v] hash [-e <exclude>] [-t <txt>] <path>
  bigtrees [-v] diff <old> <new>
  bigtrees [-v] dupes [-t <txt>] [-d <maxdepth>] <hashes>
  bigtrees [-v] set-add -o <outfile> [-n <note>] <tree>...
  bigtrees [-v] oldcat    <path>
  bigtrees [-v] oldupdate <main> <sub> <path>
  bigtrees [-v] oldtest   <path>...

Options:
  -v, --verbose  Explain each step as it runs.
  -e <exclude>   Read a list of globs and exclude any files matching it.
                 If none given, the list defaults to [".git*"]
  -t <txt>       Stream output to a text file rather than stdout.
  -d <maxdepth>  Look for dupes only <maxdepth> levels into the folder structure.
                 Drastically reduces time and memory use when reading hashes
                 from a file, without affecting accuracy up to the max depth.
                 WARNING: only works on a saved hashes file. No effect
                 when reading a tree of files and deduping them
                 at the same time.
  -m <metafmt>   Optional space-separated metadata fields to print at the
                 beginning of each line. Options are: "h" (hash),
                 "t" (type), "d" (depth) For example: "ht" -> hash, type
  -r <regex>     Regex filter filenames.
  -o <outfile>   Write to an outfile rather than stdout.
  -n <note>      Replace all hashset notes with the given string.

bigtrees [-v] set-add -o <outfile> [-n <note>] <tree>...

Commands:
  info       Succinct summary of a tree file: stats, etc
  find       Print full paths from tree file(s), and optionally filter them
  diff       Print changes in <new> relative to <old>. TODO take hashes here too!
  hash       Reads files + folders and prints their hashes to stdout.
  oldcat     Decodes and prints each <path> if hashes, and hashes + prints if not.
  olddupes   List duplicate files + folders in <hashes>.
  oldupdate  Updates <main> hashes with new ones from <sub>, inserted at <path>.
  oldtest    Run tests on the given directories.

Conditions:
  type (file, dir, graft)
  mindepth, maxdepth
  minsize, maxsize
  minfiles, maxfiles
  glob
  regex

Examples:
  bigtrees hash "/media/jeff/WD My Book"  > mybook-orig-hashes.txt
  bigtrees hash  /media/jeff/dedup/mybook > mybook-dedup-hashes.txt
  bigtrees diff mybook-{orig,dedup}-hashes.txt
